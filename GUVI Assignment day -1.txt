Q2: Write a blog on Difference between HTTP1.1 vs HTTP2

Ans: HTTP is a network delay sensitive protocol in which the page loading speed is inversely proportional to network delay. Among which HTTP 1.1 and HTTP2 are two versions. The page loading speed is faster using HTTP2 than HTTP1.1. HTTP1.1 allows multiple requests from the user in pipelining form for a single connection and accordingly responds to it that is, in case of HTTP1.1 a request is given a response and then it considers the next request. On the other hand, HTTP2 uses multiplexing for receiving requests and responding for a single connection which means it considers all the request from the client at once and responds to all the requests at the same time which is done by using streams. HTTP2 avoids network delay by using multiplexing. HTTP2 also has an additional feature called server push which gives some additional information related to the previous requests to the client before the client has requested for it. HTTP1.1 is secure as it uses digest authentication. HTTP2 is more secure as it is more efficient in dealing with the ecurity related issues and also shows connection error for any inadequate security. HTTP1.1 expands on the caching support by using headers like cache control and conditional headers lile if-match and also entity tags. While in HTTP2, less changes occurs in terms of caching, it also cancels the pushed stream if the resource is already present in cache.

Q3: Write a blog about objects and its internal representation in Javascript   

Ans: In Javascript, an object is the identity of a variable that can have multiple values and this nature of an object makes it different from the primitive datatypes (boolean, number, string, undefined,etc). An object is identified and associated with its characteristics and functions which are known as the properties and methods of the object respectively. So, the object in Javascript is a collection of named values defined by its properties and methods. The named values are assigned to an object using "key:value" pairs. This "key:value" pairs defines the property of an object. Here different properties of an object are assigned values. For example- ObjectName= {ObjectfirstProperty:value, ObjectsecondProperty:value}.We can also add or delete a property of an object.The object property is addressed and can be accessed by putting a dot after the object name like ObjectName.ObjectProperty or by using braces like ObjectName["ObjectProperty"]. In order to add a property we can write ObjectName.PropertyName=value.In order to delete a property, the syntax used is- delete ObjectName.ObjectProperty. Each object can have multiple properties and each property can be made of primitive datatypes or it can be another object also. Object methods are used to perform specific functions related to object. Thus, object methods defines the actions taken on an object. The concept of object in Javascript is illustrated by the following example:

Example: 
var Laptop={Make:"Dell";Colour:"White";Ram:"8 GB";Harddisk:"1tb"};  //Here Laptop is an object which has properties like Make, Colour, Ram, Harddisk, to which values                                                                       are assigned.
Laptop.Generation="i3";                                            //A property called Generation added to the object Laptop.
delete Laptop.Colour;                                             // A property called Colour is deleted from the object Laptop.
function(){return switch.on}                                     //An object method defined to perform a task related to the object that is switching on the laptop.  
  